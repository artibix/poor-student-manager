<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.poor.mapper.PoorFinancialMapper">

    <resultMap type="PoorFinancial" id="PoorFinancialResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="studentName"  column="student_name"  />
        <result property="userId"    column="user_id"    />
        <result property="userName"  column="user_name"  />
        <result property="aidType"    column="aid_type"    />
        <result property="aidAmount"    column="aid_amount"    />
        <result property="grantDate"    column="grant_date"    />
        <result property="grantStatus"    column="grant_status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPoorFinancialVo">
        select f.id, f.student_id, f.user_id, f.aid_type, f.aid_amount,
               f.grant_date, f.grant_status, f.create_time, f.update_time,
               s.user_name as student_name,
               u.user_name as user_name
        from poor_financial f
                 left join sys_user s on f.student_id = s.user_id
                 left join sys_user u on f.user_id = u.user_id
    </sql>

    <select id="selectPoorFinancialList" parameterType="PoorFinancial" resultMap="PoorFinancialResult">
        <include refid="selectPoorFinancialVo"/>
        <where>
            <if test="studentId != null "> and f.student_id = #{studentId}</if>
            <if test="userId != null "> and f.user_id = #{userId}</if>
            <if test="aidType != null and aidType != ''"> and f.aid_type = #{aidType}</if>
            <if test="aidAmount != null "> and f.aid_amount = #{aidAmount}</if>
            <if test="grantDate != null "> and f.grant_date = #{grantDate}</if>
            <if test="grantStatus != null and grantStatus != ''"> and f.grant_status = #{grantStatus}</if>
            <if test="studentName != null and studentName != ''"> and s.user_name like concat('%', #{studentName}, '%')</if>
            <if test="userName != null and userName != ''"> and u.user_name like concat('%', #{userName}, '%')</if>
        </where>
    </select>

    <select id="selectPoorFinancialById" parameterType="Long" resultMap="PoorFinancialResult">
        <include refid="selectPoorFinancialVo"/>
        where f.id = #{id}
    </select>

    <insert id="insertPoorFinancial" parameterType="PoorFinancial" useGeneratedKeys="true" keyProperty="id">
        insert into poor_financial
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="aidType != null">aid_type,</if>
            <if test="aidAmount != null">aid_amount,</if>
            <if test="grantDate != null">grant_date,</if>
            <if test="grantStatus != null">grant_status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="aidType != null">#{aidType},</if>
            <if test="aidAmount != null">#{aidAmount},</if>
            <if test="grantDate != null">#{grantDate},</if>
            <if test="grantStatus != null">#{grantStatus},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePoorFinancial" parameterType="PoorFinancial">
        update poor_financial
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="aidType != null">aid_type = #{aidType},</if>
            <if test="aidAmount != null">aid_amount = #{aidAmount},</if>
            <if test="grantDate != null">grant_date = #{grantDate},</if>
            <if test="grantStatus != null">grant_status = #{grantStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePoorFinancialById" parameterType="Long">
        delete from poor_financial where id = #{id}
    </delete>

    <delete id="deletePoorFinancialByIds" parameterType="String">
        delete from poor_financial where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectCollegeStats" resultType="java.util.Map">
        SELECT
            ps.college,
            COUNT(DISTINCT pf.student_id) as student_count,
            SUM(pf.aid_amount) as total_amount
        FROM poor_financial pf
                 JOIN poor_student ps ON pf.student_id = ps.user_id
        GROUP BY ps.college
    </select>

    <select id="selectMonthlyAmount" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(grant_date, '%Y-%m') as month,
            SUM(aid_amount) as amount
        FROM poor_financial
        WHERE grant_date >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)
        GROUP BY DATE_FORMAT(grant_date, '%Y-%m')
        ORDER BY month
    </select>

    <select id="selectAidTypeStats" resultType="java.util.Map">
        SELECT
            aid_type,
            COUNT(*) as count,
            SUM(aid_amount) as total_amount
        FROM poor_financial
        GROUP BY aid_type
    </select>
</mapper>