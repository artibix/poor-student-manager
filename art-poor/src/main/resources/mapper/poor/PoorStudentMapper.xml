<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.poor.mapper.PoorStudentMapper">
    
    <resultMap type="PoorStudent" id="PoorStudentResult">
        <result property="userId"    column="user_id"    />
        <result property="number"    column="number"    />
        <result property="college"    column="college"    />
        <result property="major"    column="major"    />
        <result property="grade"    column="grade"    />
        <result property="familyAddress"    column="family_address"    />
        <result property="familyIncome"    column="family_income"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="isActivated"    column="is_activated"    />
    </resultMap>

    <sql id="selectPoorStudentVo">
        select user_id, number, college, major, grade, family_address, family_income, create_time, update_time, is_activated from poor_student
    </sql>

    <select id="selectPoorStudentList" parameterType="PoorStudent" resultMap="PoorStudentResult">
        <include refid="selectPoorStudentVo"/>
        <where>  
            <if test="number != null  and number != ''"> and number = #{number}</if>
            <if test="college != null  and college != ''"> and college = #{college}</if>
            <if test="major != null  and major != ''"> and major = #{major}</if>
            <if test="grade != null  and grade != ''"> and grade = #{grade}</if>
            <if test="familyAddress != null  and familyAddress != ''"> and family_address = #{familyAddress}</if>
            <if test="familyIncome != null "> and family_income = #{familyIncome}</if>
            <if test="isActivated != null "> and is_activated = #{isActivated}</if>
        </where>
    </select>
    
    <select id="selectPoorStudentByUserId" parameterType="Long" resultMap="PoorStudentResult">
        <include refid="selectPoorStudentVo"/>
        where user_id = #{userId}
    </select>

    <insert id="insertPoorStudent" parameterType="PoorStudent">
        insert into poor_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="number != null">number,</if>
            <if test="college != null">college,</if>
            <if test="major != null">major,</if>
            <if test="grade != null">grade,</if>
            <if test="familyAddress != null">family_address,</if>
            <if test="familyIncome != null">family_income,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="isActivated != null">is_activated,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="number != null">#{number},</if>
            <if test="college != null">#{college},</if>
            <if test="major != null">#{major},</if>
            <if test="grade != null">#{grade},</if>
            <if test="familyAddress != null">#{familyAddress},</if>
            <if test="familyIncome != null">#{familyIncome},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="isActivated != null">#{isActivated},</if>
         </trim>
    </insert>

    <update id="updatePoorStudent" parameterType="PoorStudent">
        update poor_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="number != null">number = #{number},</if>
            <if test="college != null">college = #{college},</if>
            <if test="major != null">major = #{major},</if>
            <if test="grade != null">grade = #{grade},</if>
            <if test="familyAddress != null">family_address = #{familyAddress},</if>
            <if test="familyIncome != null">family_income = #{familyIncome},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="isActivated != null">is_activated = #{isActivated},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deletePoorStudentByUserId" parameterType="Long">
        delete from poor_student where user_id = #{userId}
    </delete>

    <delete id="deletePoorStudentByUserIds" parameterType="String">
        delete from poor_student where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>